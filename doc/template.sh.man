.\" Automatically generated by Pod::Man 4.09 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "STDIN 1"
.TH STDIN 1 "2022-12-14" "perl v5.26.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME SCRIPTNAME"
.IX Header "NAME SCRIPTNAME"
SHORT-DESCRIPTION
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&        SCRIPTNAME [\-o "Name=Value"] [\-h] [\-H pStyle] [\-l] [\-v] [\-x] [\-T pTest]
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Describe the script.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-o Name=Value\fR" 4
.IX Item "-o Name=Value"
[This is a placeholder for user options.]
.IP "\fB\-h\fR" 4
.IX Item "-h"
Output this \*(L"long\*(R" usage help. See \*(L"\-H long\*(R"
.IP "\fB\-H pStyle\fR" 4
.IX Item "-H pStyle"
pStyle is used to select the type of help and how it is formatted.
.Sp
Styles:
.Sp
.Vb 8
\&    short|usage \- Output short usage help as text.
\&    long|text   \- Output long usage help as text.
\&    man         \- Output long usage help as a man page.
\&    html        \- Output long usage help as html.
\&    md          \- Output long usage help as markdown.
\&    int         \- Also output internal documentation as text.
\&    int\-html    \- Also output internal documentation as html.
\&    int\-md      \- Also output internal documentation as markdown.
.Ve
.IP "\fB\-l\fR" 4
.IX Item "-l"
Send log messages to syslog. Default is to just send output to stderr.
.IP "\fB\-v\fR" 4
.IX Item "-v"
Verbose output. Default is is only output (or log) messages with
level \*(L"warning\*(R" and higher.
.Sp
\&\-v \- output \*(L"notice\*(R" and higher.
.Sp
\&\-vv \- output \*(L"info\*(R" and higher.
.IP "\fB\-x\fR" 4
.IX Item "-x"
Set the gpDebug level. Add 1 for each \-x.
Or you can set gpDebug before running the script.
.Sp
See: fLog and fLog2 (Internal documentation)
.IP "\fB\-T pTest\fR" 4
.IX Item "-T pTest"
Run the unit test functions in this script.
.Sp
\&\*(L"\-T all\*(R" will run all of the functions that begin with \*(L"test\*(R".
Otherwise \*(L"pTest\*(R" should match the test function names separated with
spaces (between quotes).
.Sp
\&\*(L"\-T list\*(R" will list all of the test functions.
.Sp
\&\*(L"\-T com\*(R" will run all the tests for bash\-com.inc
.Sp
For more details about shunit2 (or shunit2.1), see
shunit2/shunit2\-manual.html
Source <https://github.com/kward/shunit2>
.Sp
See shunit2, shunit2.1
.Sp
Also for more help, use the \*(L"\-H int\*(R" option.
.SS "Globals"
.IX Subsection "Globals"
These are globals that may affect how the script runs. Just about all
of these globals that begin with \*(L"gp\*(R" can be set and exported before
the script is run. That way you can set your own defaults, by putting
them in your ~/.bashrc or ~/.bash_profile files.
.PP
The the \*(L"common\*(R" \s-1CLI\s0 flags will override the initial variable settings.
.IP "\fBTmp\fR" 4
.IX Item "Tmp"
This is the top directory where tmp file will be put.
.Sp
Default: /tmp/$USER/SCRIPTNAME/
.Sp
if gpDebug is 0, temp files will usually include the \s-1PID.\s0
.IP "\fBgpLog\fR" 4
.IX Item "gpLog"
If set to 0, log messages will only be sent to stderr.
.Sp
If set to 1, log messages will be sent to stderr and syslog.
.Sp
See \-l, fLog and fErr for details
.Sp
Default: 0
.IP "\fBgpFacility\fR" 4
.IX Item "gpFacility"
Log messages sent to syslog will be sent to the \*(L"facility\*(R" specified
by by gpFacility.
.Sp
\&\*(L"user\*(R" log messages will be sent to /var/log/user.log, or
/var/log/syslog, or /var/log/messages.log
.Sp
See: fLog
.Sp
Default: user
.Sp
Allowed facility names:
.Sp
.Vb 10
\& local0 through local7 \- local system facilities
\& user \- misc scripts, generic user\-level messages
\& auth \- security/authorization messages
\& authpriv \- security/authorization messages (private)
\& cron \- clock daemon (cron and at)
\& daemon \- system daemons without separate facility value
\& ftp \- ftp daemon
\& kern \- kernel  messages  (these  can\*(Aqt be generated from user processes)
\& lpr \- line printer subsystem
\& mail \- mail subsystem
\& news \- USENET news subsystem
\& syslog \- messages generated internally by syslogd(8)
\& uucp \- UUCP subsystem
.Ve
.Sp
These are some suggested uses for the localN facilities:
.Sp
.Vb 8
\& local0 \- system or application configuration
\& local1 \- application processes
\& local2 \- web site errors
\& local3 \- web site access
\& local4 \- backend processes
\& local5 \- publishing
\& local6 \- available
\& local7 \- available
.Ve
.IP "\fBgpVerbose\fR" 4
.IX Item "gpVerbose"
If set to 0, only log message at \*(L"warning\*(R" level and above will be output.
.Sp
If set to 1, all non-debug messages will be output.
.Sp
See \-v, fLog
.Sp
Default: 0
.IP "\fBgpDebug\fR" 4
.IX Item "gpDebug"
If set to 0, all \*(L"debug\*(R" and \*(L"debug-N\*(R" level messages will be skipped.
.Sp
If not 0, all \*(L"debug\*(R" level messages will be output.
.Sp
Or if \*(L"debug-N\*(R" level is used, then if gpDebug is <= N, then the
log message will be output, otherwise it is skipped.
.Sp
See \-x
.SH "RETURN VALUE"
.IX Header "RETURN VALUE"
[What the program or function returns if successful.]
.SH "ERRORS"
.IX Header "ERRORS"
Fatal Error:
.PP
Warning:
.PP
Many error messages may describe where the error is located, with the
following log message format:
.PP
.Vb 1
\& Program: PID NNNN: Message [LINE](ErrNo)
.Ve
.SH "EXAMPLES"
.IX Header "EXAMPLES"
.SH "ENVIRONMENT"
.IX Header "ENVIRONMENT"
See Globals section for details.
.PP
\&\s-1HOME,USER,\s0 Tmp, gpLog, gpFacility, gpVerbose, gpDebug
.SH "SEE ALSO"
.IX Header "SEE ALSO"
shunit2.1
bash\-com.inc
bash\-com.test
.SH "CAVEATS"
.IX Header "CAVEATS"
[Things to take special care with; sometimes called \s-1WARNINGS.\s0]
.SH "DIAGNOSTICS"
.IX Header "DIAGNOSTICS"
To verify the script is internally \s-1OK,\s0 run: \s-1SCRIPTNAME\s0 \-T all
.SH "BUGS"
.IX Header "BUGS"
[Things that are broken or just don't work quite right.]
.SH "RESTRICTIONS"
.IX Header "RESTRICTIONS"
[Bugs you don't plan to fix :\-)]
.SH "AUTHOR"
.IX Header "AUTHOR"
\&\s-1NAME\s0
.SH "HISTORY"
.IX Header "HISTORY"
GPLv3 (c) Copyright 2021 by \s-1COMPANY\s0
.PP
\&\f(CW$Revision: 1.5 $ \f(CW$Date: 2022/12/14 06:50:17 $ \s-1GMT\s0
